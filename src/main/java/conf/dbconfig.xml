<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">  
  
    <!-- 引入init.properties中属性 -->  
    <bean id="placeholderConfig"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location">  
            <value>classpath:jdbc.properties</value>  
        </property>  
    </bean>  
    <!-- 配置数据源，连接池使用c3p0 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close" >  
        <property name="driverClass">  
            <value>${datasource.driverClassName}</value>  
        </property>  
        <property name="jdbcUrl">  
            <value>${datasource.url}</value>  
        </property>  
        <property name="user">  
            <value>${datasource.username}</value>  
        </property>  
        <property name="password">  
            <value>${datasource.password}</value>  
        </property>  
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <property name="acquireIncrement">  
            <value>${c3p0.acquireIncrement}</value>  
        </property>  
        <!-- 初始化时获取连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
        <property name="initialPoolSize">  
            <value>${c3p0.initialPoolSize}</value>  
        </property>  
        <!-- 连接池中保留的最小连接数 -->  
        <property name="minPoolSize">  
            <value>${c3p0.minPoolSize}</value>  
        </property>  
        <!-- -连接池中保留的最大连接数。Default: 15 -->  
        <property name="maxPoolSize">  
            <value>${c3p0.maxPoolSize}</value>  
        </property>  
        <!-- 连接最大空闲时间,单位为秒。若为0则永不丢弃。Default: 0 -->  
        <property name="maxIdleTime">  
            <value>${c3p0.maxIdleTime}</value>  
        </property>  
        <!-- 检查所有连接池中的空闲连接的时间间隔，单位是秒。Default: 0 -->  
        <property name="idleConnectionTestPeriod">  
            <value>${c3p0.idleConnectionTestPeriod}</value>  
        </property>  
        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。 -->  
        <property name="maxStatements">  
            <value>${c3p0.maxStatements}</value>  
        </property>  
        <!-- -c3p0支持的线程数,c3p0是异步操作的，通过多线程实现多个操作同时被执行。Default: 3- -->  
        <property name="numHelperThreads">  
            <value>${c3p0.numHelperThreads}</value>  
        </property>  
    </bean>  
      
    <!-- 配置mybatis固定的写法 -->    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">    
        <property name="dataSource" ref="dataSource"/>    
        <property name="configLocation">  
            <value>classpath:conf/mybatis-sqlmap.xml</value>  
        </property>  
    </bean>    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">    
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>    
    </bean>    
      
  
    <!-- 配置事务管理器bean -->  
    <!-- TransactionManager -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource">  
            <ref local="dataSource" />  
        </property>  
    </bean>  
      
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">  
        <property name="transactionManager">  
            <ref bean="transactionManager"/>  
        </property>  
    </bean>  
          
    <!-- 事务控制代理抽象定义 -->  
    <bean id="transactionProxy"  
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"  
        abstract="true">  
        <!-- 为事务代理bean注入一个事物管理器 -->  
        <property name="transactionManager">  
            <ref bean="transactionManager" />  
        </property>  
        <!-- 定义事务传播属性 -->  
        <property name="transactionAttributes">  
            <props>  
                <prop key="add*">PROPAGATION_REQUIRED</prop>  
                <prop key="release*">PROPAGATION_REQUIRED</prop>  
                <prop key="delete*">PROPAGATION_REQUIRED</prop>  
                <prop key="update*">PROPAGATION_REQUIRED</prop>  
                <prop key="find*">PROPAGATION_REQUIRED</prop>  
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>  
            </props>  
        </property>  
    </bean>  
  
</beans>